#####################################################################################################################
#
# File: config/calvalus.properties
#
# Read by com.bc.calvalus.portal.server.BackendConfig.
# Properties in this file may be overridden by Java System properties.
#
# A parameter of format "calvalus.hadoop.<name>" will become a Hadoop job configuration properties "<name>".
#
#####################################################################################################################

# Factory that instantiates the production service.
# calvalus.portal.productionServiceFactory.class=com.bc.calvalus.production.local.LocalProductionServiceFactory
calvalus.portal.productionServiceFactory.class = com.bc.calvalus.production.hadoop.HadoopServiceContainerFactory

# Output file staging directory.
# Value is relative to the context's directory
calvalus.portal.staging.path = staging

# File upload directory (not yet used).
# Value is relative to the context's directory
calvalus.portal.upload.path = uploads

# Hadoop HDFS locator "fs.default.name"
#calvalus.hadoop.fs.defaultFS = hdfs://master00:9000
calvalus.hadoop.fs.defaultFS = hdfs://calvalus
calvalus.hadoop.dfs.nameservices = calvalus
calvalus.hadoop.dfs.ha.namenodes.calvalus = nn1,nn2
calvalus.hadoop.dfs.namenode.rpc-address.calvalus.nn1 = master00:8020
calvalus.hadoop.dfs.namenode.rpc-address.calvalus.nn2 = master01:8020
calvalus.hadoop.dfs.client.failover.proxy.provider.calvalus = org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider

calvalus.hadoop.mapreduce.jobhistory.address = master00:10200
calvalus.hadoop.mapreduce.jobhistory.webapp.address = master00:19888

# Hadoop namenode locator "mapred.job.tracker"
#calvalus.hadoop.yarn.resourcemanager.address = master00:8032

# Hadoop job priority, can be VERY_HIGH, HIGH, NORMAL, LOW, VERY_LOW
#calvalus.hadoop.mapreduce.job.priority = HIGH

# Calvalus software bundle "calvalus.calvalus.bundle"
calvalus.hadoop.calvalus.calvalus.bundle = calvalus-2.22

# SNAP software bundle "calvalus.snap.bundle"
calvalus.hadoop.calvalus.snap.bundle = snap-8.0.0-SNAPSHOT

calvalus.hadoop.mapreduce.framework.name = yarn
#calvalus.hadoop.yarn.resourcemanager.hostname = master00
calvalus.hadoop.yarn.resourcemanager.ha.enabled = true
calvalus.hadoop.yarn.resourcemanager.cluster-id = calvalus-yarn
calvalus.hadoop.yarn.resourcemanager.ha.rm-ids = rm1,rm2
calvalus.hadoop.yarn.resourcemanager.hostname = master00
calvalus.hadoop.yarn.resourcemanager.hostname.rm1 = master00
calvalus.hadoop.yarn.resourcemanager.hostname.rm2 = master01
calvalus.hadoop.yarn.client.failover-proxy-provider = org.apache.hadoop.yarn.client.ConfiguredRMFailoverProxyProvider

# for Windows developer debugging the portal this may be necessary
calvalus.hadoop.mapreduce.app-submission.cross-platform = true

 # portal access control and visual configuration
calvalus.portal.userRole = calvalus bc bg coastcolour calwps
calvalus.portal.newsView = calvalus bc coastcolour
calvalus.portal.l2View = calvalus bc bg coastcolour calwps
calvalus.portal.maView = calvalus bc bg
calvalus.portal.raView = calvalus bc bg
calvalus.portal.l3View = calvalus bc bg coastcolour calwps
calvalus.portal.taView = calvalus bc bg
calvalus.portal.freshmonView = calvalus bc
calvalus.portal.bootstrappingView = calvalus bc
calvalus.portal.vicariousCalibrationView = calvalus bc
calvalus.portal.matchupComparisonView = calvalus bc
calvalus.portal.l2ToL3ComparisonView = calvalus bc
calvalus.portal.qlView = calvalus bc bg coastcolour calwps
calvalus.portal.regionsView = calvalus bc bg coastcolour calwps
calvalus.portal.bundlesView = calvalus bc calwps
calvalus.portal.masksView = calvalus bc bg
calvalus.portal.requestsView = calvalus bc bg coastcolour calwps
calvalus.portal.productionsView = calvalus bc bg coastcolour calwps
calvalus.portal.otherSets = bc
calvalus.portal.catalogue = bc
calvalus.portal.unlimitedJobSize = calvalus bc
calvalus.portal.inputFilesPanel =

# Quicklook WMS checkbox - access control and visual configuration
calvalus.portal.ql.wms = calvalus bc bg coastcolour calwps

# Configuration for publishing quicklook GeoTiff images to GeoServer
calvalus.ql.upload.handler = geoserver
calvalus.ql.upload.URL = http://localhost:8080/geoserver/rest
calvalus.ql.upload.username = admin
calvalus.ql.upload.password = geoserver
calvalus.ql.upload.workspace = calmar

# optional production queue to submit jobs to when using the portal
# default is default
calvalus.hadoop.mapreduce.job.queuename = default
calvalus.queue.calvalus = default
calvalus.queue.bc = default other lc fire cyano
calvalus.queue.coastcolour = cc
calvalus.queue.bfg = bfg
calvalus.queue.calwps = tep
calvalus.queue.caldev = default test high
calvalus.queue.bg = cyano

# to identify where a job request comes from in Hadoop
calvalus.system.name = CODE Calvalus

# threshold of log file size before it starts being truncated
calvalus.logs.maxSizeKb = 100
# Used for waiting for the log aggregation to finish. These configurations are important especially
# in CPT, where a job is retrieved synchronously after the job completion.
calvalus.logs.cpt.retryPeriodMillis = 1000
calvalus.logs.cpt.maxRetries = 5
